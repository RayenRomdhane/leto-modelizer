name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  branch-naming-rules:
    name: Check branch name
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(feature|bugfix|improvement|library|prerelease|release|hotfix)\/[a-z0-9_.-]+$'
          allowed_prefixes: 'feature,bugfix,improvement,library,prerelease,release,hotfix'
          ignore: main,dev
          min_length: 5
          max_length: 50

  check-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Check style
        run: npm run lint

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test
      - name: Upload line coverage report
        uses: actions/upload-artifact@v3
        with:
          name: reports-lcov-${{ github.sha }}
          path: reports/

  check-dependencies:
    name: Check dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install npm-check-updates
      - name: Run check dependencies
        run: echo '```bash' > dependencies.txt && npx ncu -x "leto-modelizer*" >> dependencies.txt && echo '```' >> dependencies.txt
      - name: Post comment
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: dependencies.txt

  # e2e-tests:
  #   name: E2E tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #     - run: git submodule update --init --recursive
  #     - name: Build proxy
  #       run: cd cors-proxy && sed -i "s/80/9999/g" Dockerfile && docker build . -t cors-proxy
  #     - name: Setup application for e2e tests
  #       run: |
  #         npm install && \
  #         npm run plugin:install -- repository-name="leto-modelizer-plugin-test" repository-url="https://github.com/ditrit/leto-modelizer-plugin-test.git" && \
  #         npm run plugin:init
  #     - name: Build application
  #       run: docker build --build-arg proxy_url=http://localhost:9999 -t leto-modelizer -f DockerfileE2E .
  #     - name: Run application
  #       run: docker-compose up -d
  #     - name: Run functional tests
  #       run: npm run test:e2e

  sonarcloud:
    name: SonarCloud
    needs: [check-style, unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Download line coverage report
        uses: actions/download-artifact@v3
        with:
          name: reports-lcov-${{ github.sha }}
          path: reports/
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
